version: "3.9"

services:
  redis-server:
    hostname: redis
    container_name: redis-server
    image: redis:6.2-alpine
    ports:
      - "6379:6379"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    networks:
      - backend

  mysql:
    container_name: mysql
    image: mysql:5.7
    restart: always
    environment:
      - MYSQL_DATABASE=db_test
      - MYSQL_USER=dbuser
      - MYSQL_PASSWORD=dbpassword
      - MYSQL_ROOT_PASSWORD=password
    ports:
      - "3366:3306"
    expose:
      - 3366
    volumes:
      - mysql_data:/var/lib/mysql
      - ./deployment/db/init.sql:/data/application/init.sql
    command: --init-file /data/application/init.sql
    networks:
      - backend

  service-registry:
    container_name: service-registry
    build:
      context: ./service-registry
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - backend

  hystrix-dashboard:
    container_name: hystrix-dashboard
    build:
      context: ./hystrix-dashboard
      dockerfile: Dockerfile
    environment:
      - eureka.client.service-url.defaultZone=http://service-registry:8761/eureka/
    depends_on:
      - service-registry
    ports:
      - "9295:9295"
    networks:
      - backend

  cloud-config-server:
    container_name: cloud-config-server
    build:
      context: ./cloud-config-server
      dockerfile: Dockerfile
    environment:
      - eureka.client.service-url.defaultZone=http://service-registry:8761/eureka/
    depends_on:
      - service-registry
    ports:
      - "9296:9296"
    networks:
      - backend

  cloud-gateway:
    container_name: cloud-gateway
    build:
      context: ./cloud-gateway
      dockerfile: Dockerfile
    environment:
      - eureka.client.service-url.defaultZone=http://service-registry:8761/eureka/
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JAVA_TOOL_OPTIONS="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005"
    depends_on:
      - service-registry
      - cloud-config-server
      - redis-server
    ports:
      - "80:8080"
      - "5005:5005"
    expose:
      - 8080
    links:
      - "redis-server:redis"
    networks:
      - backend

  auth-server:
    container_name: auth-server
    build:
      context: ./auth-server
      dockerfile: Dockerfile
    environment:
      - eureka.client.service-url.defaultZone=http://service-registry:8761/eureka/
      - DB_NAME=db_test
      - DB_USER=dbuser
      - DB_PASSWORD=dbpassword
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JAVA_TOOL_OPTIONS="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005"
    depends_on:
      - service-registry
      - redis-server
      - mysql
    ports:
      - "5056:5005"
    links:
      - "redis-server:redis"
    networks:
      - backend

  user-service:
    container_name: user-service
    build:
      context: ./user-service
      dockerfile: Dockerfile
    environment:
      - eureka.client.service-url.defaultZone=http://service-registry:8761/eureka/
    ports:
      - "5057:5005"
    depends_on:
      - service-registry
    networks:
      - backend

  department-service:
    container_name: department-service
    build:
      context: ./department-service
      dockerfile: Dockerfile
    environment:
      - eureka.client.service-url.defaultZone=http://service-registry:8761/eureka/
    ports:
      - "5058:5005"
    depends_on:
      - service-registry
    networks:
      - backend

volumes:
  mysql_data:
    driver: local

networks:
  backend:
    name: api-network
